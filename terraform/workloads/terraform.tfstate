{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 60,
  "lineage": "cb8ef700-94af-997a-5fab-9b9dac67ab08",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "194722415730",
            "arn": "arn:aws:iam::194722415730:user/test",
            "id": "194722415730",
            "user_id": "AIDAS2VS4IRZFHV7UYR74"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:us-east-1:194722415730:cluster/eks-cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJY3hzTDEzb3pJcVV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBNU1ETXlNakF3TlRWYUZ3MHpOVEE1TURFeU1qQTFOVFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM2UHQyTVdzVEo4aUZyQzJ4TG9Lc2d3VjIwcUFjS2llaGhLOC8va21BMXl1TUllNDFOR1I3M2VOVnMKcmtWclkwd2hlWHduRTRrdGQyTzY0TGVmNklpWjdxSmFCRUx5YXRITjI4clhJSUllZzBGTGxIYlVBbkFBTUJHbwpHbFVNNy82U3VNWFZOZVFIajhnZEkrR05uQXhwS3Z0NGFGZmRXMlNnaFRoRklFdGtmVFBhV1lmbVVnbEl0MWhPCjNmdzJTSnQxRFMvUHFJdktxSmF0eTJIaUowSThCUWM3dUY4cmxBb1FwWTUyRFFaR3lrTmJBRU5pWXZmcFJEV04KTnRmSFZNMlg5OHpVbWZsVUVobXh2NUI0M2E5K0NUSzA1RkNaV1ZjR1l2SVMyV0doQ0UyUVFoL0VpUDdvZmh1VwpBck9jVzI0eCs5KzVRK1dTelF2Z2xHNWpLTFBoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWjgrcndYRm9nL1FzWnJuajBlUXU3WmozK1F6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkpTNTBXTERDQgp5R1RoMnN4M2ROd1pNLzlXOUhicmwrd3YvYzlwaFh5N0J5eXMyOVI4blppT3U2Z1AwTld6eUVZaXA5N3dBVTV3Ck8zRXJieEY0M3c0YXdFUmVGc2F5a0grUE9ZUVk3NjZQVWZ4RjUzdjM3Qm9MSkxtWGZLcEFzQ2QrakloL00yMzAKWjh2dCtaci9WT3h0NURHZkNIVjVwekNCV0VDQzBsQ05XTEJDcHFMUEx4THlEK0J5bThSZXVLSHdSSGlGS3RyUQpQTVVoTEZTbGVBL0dlYnBnb3hiREV3WG4vOW5hUXNTTWpURC80Zjl1dDJSZk9hVjhPTlY3OUJRMmE2ZnJMVTM1CjNNcHVhNGE1c0sxY1YzTlNmWHNuVjlDNzdFd0RDaUc2a256bDdqWGFCc1BTMnFNc0Y5RlhWRXpPdVVOY2dVeU8KcE9USmMzdUdvUGp1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "compute_config": [],
            "created_at": "2025-09-03T22:00:31Z",
            "deletion_protection": false,
            "enabled_cluster_log_types": [],
            "endpoint": "https://188F954CDB12DBC929471E9A4766D5F4.gr7.us-east-1.eks.amazonaws.com",
            "id": "eks-cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "elastic_load_balancing": [
                  {
                    "enabled": false
                  }
                ],
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-cluster",
            "outpost_config": [],
            "platform_version": "eks.51",
            "region": "us-east-1",
            "remote_network_config": [],
            "role_arn": "arn:aws:iam::194722415730:role/eks-cluster-role",
            "status": "ACTIVE",
            "storage_config": [],
            "tags": {
              "alpha.eksctl.io/cluster-oidc-enabled": "true"
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.28",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0665d86a807851d1b",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [],
                "subnet_ids": [
                  "subnet-00131c049686189b0",
                  "subnet-08b360714aba31926",
                  "subnet-0f28940fffeec703a"
                ],
                "vpc_id": "vpc-0820caa193c28303d"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-cluster",
            "name": "eks-cluster",
            "region": "us-east-1",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBUzJWUzRJUlpNUEE0Rk1ZWSUyRjIwMjUwOTA0JTJGdXMtZWFzdC0xJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTA5MDRUMDcyMzE0WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT1hYzM3MTFmNDA3Y2Q0YzJlYzFjYzcyZjEwZDNiMGU5ZjU1YjU4OTQ0NWRlZmQwMWFhODFkNmEzZTZhZWM4ZmIy"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::194722415730:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::194722415730:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4",
            "tags": {},
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_route53_zone",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z10182541J3IDL68C93TT",
            "caller_reference": "8f2ab04f-a35e-4c5c-8adf-4a2d32f5b07f",
            "comment": "",
            "id": "Z10182541J3IDL68C93TT",
            "linked_service_description": null,
            "linked_service_principal": null,
            "name": "itiproject.site",
            "name_servers": [
              "ns-1692.awsdns-19.co.uk",
              "ns-694.awsdns-22.net",
              "ns-1210.awsdns-23.org",
              "ns-343.awsdns-42.com"
            ],
            "primary_name_server": "ns-1692.awsdns-19.co.uk",
            "private_zone": false,
            "resource_record_set_count": 7,
            "tags": {},
            "vpc_id": null,
            "zone_id": "Z10182541J3IDL68C93TT"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "main_application_record",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [
              {
                "evaluate_target_health": true,
                "name": "k8s-itiprojectalb-a0612e2bcf-950109750.us-east-1.elb.amazonaws.com",
                "zone_id": "Z35SXDOTRQ7X7K"
              }
            ],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "www.itiproject.site",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z10182541J3IDL68C93TT_www.itiproject.site_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "www.itiproject.site",
            "records": [],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 0,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z10182541J3IDL68C93TT"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "account_id": "194722415730",
            "name": "www.itiproject.site",
            "set_identifier": null,
            "type": "A",
            "zone_id": "Z10182541J3IDL68C93TT"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "data.aws_route53_zone.main",
            "module.argocd.aws_route53_record.argocd",
            "module.argocd.data.aws_lb.argocd_alb",
            "module.argocd.helm_release.argocd",
            "module.argocd.kubernetes_manifest.argocd_ingress",
            "module.argocd.kubernetes_namespace.argocd",
            "module.argocd.null_resource.wait_for_alb",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.aws_iam_role_policy_attachment.alb_controller_attach",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy",
            "module.load_balancer.helm_release.aws_load_balancer_controller",
            "module.load_balancer.kubernetes_service_account.alb_controller_sa"
          ]
        }
      ]
    },
    {
      "module": "module.argocd",
      "mode": "data",
      "type": "aws_lb",
      "name": "argocd_alb",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_logs": [
              {
                "bucket": "",
                "enabled": false,
                "prefix": ""
              }
            ],
            "arn": "arn:aws:elasticloadbalancing:us-east-1:194722415730:loadbalancer/app/k8s-itiprojectalb-a0612e2bcf/aea880fa05c90301",
            "arn_suffix": "app/k8s-itiprojectalb-a0612e2bcf/aea880fa05c90301",
            "client_keep_alive": 3600,
            "connection_logs": [
              {
                "bucket": "",
                "enabled": false,
                "prefix": ""
              }
            ],
            "customer_owned_ipv4_pool": "",
            "desync_mitigation_mode": "defensive",
            "dns_name": "k8s-itiprojectalb-a0612e2bcf-950109750.us-east-1.elb.amazonaws.com",
            "dns_record_client_routing_policy": null,
            "drop_invalid_header_fields": false,
            "enable_cross_zone_load_balancing": true,
            "enable_deletion_protection": false,
            "enable_http2": true,
            "enable_tls_version_and_cipher_suite_headers": false,
            "enable_waf_fail_open": false,
            "enable_xff_client_port": false,
            "enable_zonal_shift": false,
            "enforce_security_group_inbound_rules_on_private_link_traffic": "",
            "id": "arn:aws:elasticloadbalancing:us-east-1:194722415730:loadbalancer/app/k8s-itiprojectalb-a0612e2bcf/aea880fa05c90301",
            "idle_timeout": 60,
            "internal": false,
            "ip_address_type": "ipv4",
            "ipam_pools": [],
            "load_balancer_type": "application",
            "name": "k8s-itiprojectalb-a0612e2bcf",
            "preserve_host_header": false,
            "region": "us-east-1",
            "security_groups": [
              "sg-01d18833b31e3f388",
              "sg-0453f45addd6f0525"
            ],
            "subnet_mapping": [
              {
                "allocation_id": "",
                "ipv6_address": "",
                "outpost_id": "",
                "private_ipv4_address": "",
                "subnet_id": "subnet-004381ecfcea83fc5"
              },
              {
                "allocation_id": "",
                "ipv6_address": "",
                "outpost_id": "",
                "private_ipv4_address": "",
                "subnet_id": "subnet-0823b0a7c55407817"
              },
              {
                "allocation_id": "",
                "ipv6_address": "",
                "outpost_id": "",
                "private_ipv4_address": "",
                "subnet_id": "subnet-0fa17df37458807e3"
              }
            ],
            "subnets": [
              "subnet-004381ecfcea83fc5",
              "subnet-0823b0a7c55407817",
              "subnet-0fa17df37458807e3"
            ],
            "tags": {
              "elbv2.k8s.aws/cluster": "eks-cluster",
              "ingress.k8s.aws/resource": "LoadBalancer",
              "ingress.k8s.aws/stack": "itiproject-alb"
            },
            "timeouts": null,
            "vpc_id": "vpc-0820caa193c28303d",
            "xff_header_processing_mode": "append",
            "zone_id": "Z35SXDOTRQ7X7K"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.argocd",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [
              {
                "evaluate_target_health": true,
                "name": "k8s-itiprojectalb-a0612e2bcf-950109750.us-east-1.elb.amazonaws.com",
                "zone_id": "Z35SXDOTRQ7X7K"
              }
            ],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "argocd.itiproject.site",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z10182541J3IDL68C93TT_argocd.itiproject.site_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "argocd.itiproject.site",
            "records": [],
            "set_identifier": "",
            "timeouts": null,
            "ttl": 0,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z10182541J3IDL68C93TT"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "account_id": "194722415730",
            "name": "argocd.itiproject.site",
            "set_identifier": null,
            "type": "A",
            "zone_id": "Z10182541J3IDL68C93TT"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "data.aws_route53_zone.main",
            "module.argocd.data.aws_lb.argocd_alb",
            "module.argocd.helm_release.argocd",
            "module.argocd.kubernetes_manifest.argocd_ingress",
            "module.argocd.kubernetes_namespace.argocd",
            "module.argocd.null_resource.wait_for_alb",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.aws_iam_role_policy_attachment.alb_controller_attach",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy",
            "module.load_balancer.helm_release.aws_load_balancer_controller",
            "module.load_balancer.kubernetes_service_account.alb_controller_sa"
          ]
        }
      ]
    },
    {
      "module": "module.argocd",
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v3.1.1",
                "chart": "argo-cd",
                "name": "argocd",
                "namespace": "argocd",
                "revision": 1,
                "values": "null",
                "version": "8.3.3"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "8.3.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.argocd.kubernetes_namespace.argocd",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.aws_iam_role_policy_attachment.alb_controller_attach",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy",
            "module.load_balancer.helm_release.aws_load_balancer_controller",
            "module.load_balancer.kubernetes_service_account.alb_controller_sa"
          ]
        }
      ]
    },
    {
      "module": "module.argocd",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "argocd_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "alb.ingress.kubernetes.io/backend-protocol": "HTTPS",
                    "alb.ingress.kubernetes.io/group.name": "itiproject-alb",
                    "alb.ingress.kubernetes.io/healthcheck-path": "/",
                    "alb.ingress.kubernetes.io/healthcheck-port": "443",
                    "alb.ingress.kubernetes.io/listen-ports": "[{\"HTTPS\":443}]",
                    "alb.ingress.kubernetes.io/load-balancer-attributes": "idle_timeout.timeout_seconds=60",
                    "alb.ingress.kubernetes.io/scheme": "internet-facing",
                    "alb.ingress.kubernetes.io/ssl-redirect": "443",
                    "alb.ingress.kubernetes.io/target-type": "ip"
                  },
                  "name": "argocd-ingress",
                  "namespace": "argocd"
                },
                "spec": {
                  "ingressClassName": "alb",
                  "rules": [
                    {
                      "host": "argocd.itiproject.site",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "service": {
                                "name": "argocd-server",
                                "port": {
                                  "number": 443
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "argocd.itiproject.site"
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "alb.ingress.kubernetes.io/backend-protocol": "string",
                          "alb.ingress.kubernetes.io/group.name": "string",
                          "alb.ingress.kubernetes.io/healthcheck-path": "string",
                          "alb.ingress.kubernetes.io/healthcheck-port": "string",
                          "alb.ingress.kubernetes.io/listen-ports": "string",
                          "alb.ingress.kubernetes.io/load-balancer-attributes": "string",
                          "alb.ingress.kubernetes.io/scheme": "string",
                          "alb.ingress.kubernetes.io/ssl-redirect": "string",
                          "alb.ingress.kubernetes.io/target-type": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "ingressClassName": "string",
                      "rules": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "host": "string",
                              "http": [
                                "object",
                                {
                                  "paths": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "backend": [
                                            "object",
                                            {
                                              "service": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "port": [
                                                    "object",
                                                    {
                                                      "number": "number"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "path": "string",
                                          "pathType": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "alb.ingress.kubernetes.io/backend-protocol": "HTTPS",
                    "alb.ingress.kubernetes.io/group.name": "itiproject-alb",
                    "alb.ingress.kubernetes.io/healthcheck-path": "/",
                    "alb.ingress.kubernetes.io/healthcheck-port": "443",
                    "alb.ingress.kubernetes.io/listen-ports": "[{\"HTTPS\":443}]",
                    "alb.ingress.kubernetes.io/load-balancer-attributes": "idle_timeout.timeout_seconds=60",
                    "alb.ingress.kubernetes.io/scheme": "internet-facing",
                    "alb.ingress.kubernetes.io/ssl-redirect": "443",
                    "alb.ingress.kubernetes.io/target-type": "ip"
                  },
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": [
                    "group.ingress.k8s.aws/itiproject-alb"
                  ],
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "argocd-ingress",
                  "namespace": "argocd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "defaultBackend": {
                    "resource": {
                      "apiGroup": null,
                      "kind": null,
                      "name": null
                    },
                    "service": {
                      "name": null,
                      "port": {
                        "name": null,
                        "number": null
                      }
                    }
                  },
                  "ingressClassName": "alb",
                  "rules": [
                    {
                      "host": "argocd.itiproject.site",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "resource": {
                                "apiGroup": null,
                                "kind": null,
                                "name": null
                              },
                              "service": {
                                "name": "argocd-server",
                                "port": {
                                  "name": null,
                                  "number": 443
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "argocd.itiproject.site"
                      ],
                      "secretName": null
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "defaultBackend": [
                        "object",
                        {
                          "resource": [
                            "object",
                            {
                              "apiGroup": "string",
                              "kind": "string",
                              "name": "string"
                            }
                          ],
                          "service": [
                            "object",
                            {
                              "name": "string",
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "ingressClassName": "string",
                      "rules": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "http": [
                              "object",
                              {
                                "paths": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "backend": [
                                        "object",
                                        {
                                          "resource": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "service": [
                                            "object",
                                            {
                                              "name": "string",
                                              "port": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "number": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "path": "string",
                                      "pathType": "string"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "secretName": "string"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.argocd.helm_release.argocd",
            "module.argocd.kubernetes_namespace.argocd",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.aws_iam_role_policy_attachment.alb_controller_attach",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy",
            "module.load_balancer.helm_release.aws_load_balancer_controller",
            "module.load_balancer.kubernetes_service_account.alb_controller_sa"
          ]
        }
      ]
    },
    {
      "module": "module.argocd",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd",
                "resource_version": "25893",
                "uid": "4e6bc66a-5c48-4ecf-8ca9-2b9ab63c74c8"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.aws_iam_role_policy_attachment.alb_controller_attach",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy",
            "module.load_balancer.helm_release.aws_load_balancer_controller",
            "module.load_balancer.kubernetes_service_account.alb_controller_sa"
          ]
        }
      ]
    },
    {
      "module": "module.argocd",
      "mode": "managed",
      "type": "null_resource",
      "name": "wait_for_alb",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7531570533822130717",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.argocd.helm_release.argocd",
            "module.argocd.kubernetes_manifest.argocd_ingress",
            "module.argocd.kubernetes_namespace.argocd",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.aws_iam_role_policy_attachment.alb_controller_attach",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy",
            "module.load_balancer.helm_release.aws_load_balancer_controller",
            "module.load_balancer.kubernetes_service_account.alb_controller_sa"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "alb_assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2913966948",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::194722415730:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Principal\":{\"Federated\":\"arn:aws:iam::194722415730:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4\"},\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller"
                    ],
                    "variable": "oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::194722415730:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "data",
      "type": "http",
      "name": "alb_controller_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/http\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "body": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeVpcPeeringConnections\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeTags\",\n                \"ec2:GetCoipPoolUsage\",\n                \"ec2:DescribeCoipPools\",\n                \"ec2:GetSecurityGroupsForVpc\",\n                \"ec2:DescribeIpamPools\",\n                \"elasticloadbalancing:DescribeLoadBalancers\",\n                \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n                \"elasticloadbalancing:DescribeListeners\",\n                \"elasticloadbalancing:DescribeListenerCertificates\",\n                \"elasticloadbalancing:DescribeSSLPolicies\",\n                \"elasticloadbalancing:DescribeRules\",\n                \"elasticloadbalancing:DescribeTargetGroups\",\n                \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n                \"elasticloadbalancing:DescribeTargetHealth\",\n                \"elasticloadbalancing:DescribeTags\",\n                \"elasticloadbalancing:DescribeTrustStores\",\n                \"elasticloadbalancing:DescribeListenerAttributes\",\n                \"elasticloadbalancing:DescribeCapacityReservation\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"acm:ListCertificates\",\n                \"acm:DescribeCertificate\",\n                \"iam:ListServerCertificates\",\n                \"iam:GetServerCertificate\",\n                \"waf-regional:GetWebACL\",\n                \"waf-regional:GetWebACLForResource\",\n                \"waf-regional:AssociateWebACL\",\n                \"waf-regional:DisassociateWebACL\",\n                \"wafv2:GetWebACL\",\n                \"wafv2:GetWebACLForResource\",\n                \"wafv2:AssociateWebACL\",\n                \"wafv2:DisassociateWebACL\",\n                \"shield:GetSubscriptionState\",\n                \"shield:DescribeProtection\",\n                \"shield:CreateProtection\",\n                \"shield:DeleteProtection\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateSecurityGroup\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": \"CreateSecurityGroup\"\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DeleteTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:DeleteSecurityGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateLoadBalancer\",\n                \"elasticloadbalancing:CreateTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateListener\",\n                \"elasticloadbalancing:DeleteListener\",\n                \"elasticloadbalancing:CreateRule\",\n                \"elasticloadbalancing:DeleteRule\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n                \"elasticloadbalancing:SetIpAddressType\",\n                \"elasticloadbalancing:SetSecurityGroups\",\n                \"elasticloadbalancing:SetSubnets\",\n                \"elasticloadbalancing:DeleteLoadBalancer\",\n                \"elasticloadbalancing:ModifyTargetGroup\",\n                \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n                \"elasticloadbalancing:DeleteTargetGroup\",\n                \"elasticloadbalancing:ModifyListenerAttributes\",\n                \"elasticloadbalancing:ModifyCapacityReservation\",\n                \"elasticloadbalancing:ModifyIpPools\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"elasticloadbalancing:CreateAction\": [\n                        \"CreateTargetGroup\",\n                        \"CreateLoadBalancer\"\n                    ]\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:RegisterTargets\",\n                \"elasticloadbalancing:DeregisterTargets\"\n            ],\n            \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:SetWebAcl\",\n                \"elasticloadbalancing:ModifyListener\",\n                \"elasticloadbalancing:AddListenerCertificates\",\n                \"elasticloadbalancing:RemoveListenerCertificates\",\n                \"elasticloadbalancing:ModifyRule\",\n                \"elasticloadbalancing:SetRulePriorities\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n",
            "ca_cert_pem": null,
            "client_cert_pem": null,
            "client_key_pem": null,
            "id": "https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.12.0/docs/install/iam_policy.json",
            "insecure": null,
            "method": null,
            "request_body": null,
            "request_headers": null,
            "request_timeout_ms": null,
            "response_body": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeVpcPeeringConnections\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeTags\",\n                \"ec2:GetCoipPoolUsage\",\n                \"ec2:DescribeCoipPools\",\n                \"ec2:GetSecurityGroupsForVpc\",\n                \"ec2:DescribeIpamPools\",\n                \"elasticloadbalancing:DescribeLoadBalancers\",\n                \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n                \"elasticloadbalancing:DescribeListeners\",\n                \"elasticloadbalancing:DescribeListenerCertificates\",\n                \"elasticloadbalancing:DescribeSSLPolicies\",\n                \"elasticloadbalancing:DescribeRules\",\n                \"elasticloadbalancing:DescribeTargetGroups\",\n                \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n                \"elasticloadbalancing:DescribeTargetHealth\",\n                \"elasticloadbalancing:DescribeTags\",\n                \"elasticloadbalancing:DescribeTrustStores\",\n                \"elasticloadbalancing:DescribeListenerAttributes\",\n                \"elasticloadbalancing:DescribeCapacityReservation\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"acm:ListCertificates\",\n                \"acm:DescribeCertificate\",\n                \"iam:ListServerCertificates\",\n                \"iam:GetServerCertificate\",\n                \"waf-regional:GetWebACL\",\n                \"waf-regional:GetWebACLForResource\",\n                \"waf-regional:AssociateWebACL\",\n                \"waf-regional:DisassociateWebACL\",\n                \"wafv2:GetWebACL\",\n                \"wafv2:GetWebACLForResource\",\n                \"wafv2:AssociateWebACL\",\n                \"wafv2:DisassociateWebACL\",\n                \"shield:GetSubscriptionState\",\n                \"shield:DescribeProtection\",\n                \"shield:CreateProtection\",\n                \"shield:DeleteProtection\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateSecurityGroup\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": \"CreateSecurityGroup\"\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DeleteTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:DeleteSecurityGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateLoadBalancer\",\n                \"elasticloadbalancing:CreateTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateListener\",\n                \"elasticloadbalancing:DeleteListener\",\n                \"elasticloadbalancing:CreateRule\",\n                \"elasticloadbalancing:DeleteRule\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n                \"elasticloadbalancing:SetIpAddressType\",\n                \"elasticloadbalancing:SetSecurityGroups\",\n                \"elasticloadbalancing:SetSubnets\",\n                \"elasticloadbalancing:DeleteLoadBalancer\",\n                \"elasticloadbalancing:ModifyTargetGroup\",\n                \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n                \"elasticloadbalancing:DeleteTargetGroup\",\n                \"elasticloadbalancing:ModifyListenerAttributes\",\n                \"elasticloadbalancing:ModifyCapacityReservation\",\n                \"elasticloadbalancing:ModifyIpPools\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"elasticloadbalancing:CreateAction\": [\n                        \"CreateTargetGroup\",\n                        \"CreateLoadBalancer\"\n                    ]\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:RegisterTargets\",\n                \"elasticloadbalancing:DeregisterTargets\"\n            ],\n            \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:SetWebAcl\",\n                \"elasticloadbalancing:ModifyListener\",\n                \"elasticloadbalancing:AddListenerCertificates\",\n                \"elasticloadbalancing:RemoveListenerCertificates\",\n                \"elasticloadbalancing:ModifyRule\",\n                \"elasticloadbalancing:SetRulePriorities\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n",
            "response_body_base64": "",
            "response_headers": {
              "Accept-Ranges": "bytes",
              "Access-Control-Allow-Origin": "*",
              "Cache-Control": "max-age=300",
              "Content-Security-Policy": "default-src 'none'; style-src 'unsafe-inline'; sandbox",
              "Content-Type": "text/plain; charset=utf-8",
              "Cross-Origin-Resource-Policy": "cross-origin",
              "Date": "Thu, 04 Sep 2025 07:23:13 GMT",
              "Etag": "W/\"d0d76f0c26eef51248fdc02ee9156134e9f2fdf5a039e0117a5af08aba963e63\"",
              "Expires": "Thu, 04 Sep 2025 07:28:13 GMT",
              "Source-Age": "0",
              "Strict-Transport-Security": "max-age=31536000",
              "Vary": "Authorization,Accept-Encoding",
              "Via": "1.1 varnish",
              "X-Cache": "MISS",
              "X-Cache-Hits": "0",
              "X-Content-Type-Options": "nosniff",
              "X-Fastly-Request-Id": "30c0d699144e88d781b0c432389b7650f31dd36c",
              "X-Frame-Options": "deny",
              "X-Github-Request-Id": "15A3:E9A08:88AA35:A0087C:68B93E5F",
              "X-Served-By": "cache-lin1730030-LIN",
              "X-Timer": "S1756970594.820469,VS0,VE130",
              "X-Xss-Protection": "1; mode=block"
            },
            "retry": null,
            "status_code": 200,
            "url": "https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.12.0/docs/install/iam_policy.json"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "alb_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy",
            "attachment_count": 1,
            "description": "",
            "id": "arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy",
            "name": "AWSLoadBalancerControllerIAMPolicy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"iam:CreateServiceLinkedRole\"],\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DescribeAccountAttributes\",\"ec2:DescribeAddresses\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeInstances\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeTags\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeCoipPools\",\"ec2:GetSecurityGroupsForVpc\",\"ec2:DescribeIpamPools\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeTrustStores\",\"elasticloadbalancing:DescribeListenerAttributes\",\"elasticloadbalancing:DescribeCapacityReservation\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"waf-regional:GetWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:AssociateWebACL\",\"waf-regional:DisassociateWebACL\",\"wafv2:GetWebACL\",\"wafv2:GetWebACLForResource\",\"wafv2:AssociateWebACL\",\"wafv2:DisassociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:CreateProtection\",\"shield:DeleteProtection\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateSecurityGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:CreateTags\",\"ec2:DeleteTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateTargetGroup\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:DeleteRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:DeleteLoadBalancer\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:ModifyListenerAttributes\",\"elasticloadbalancing:ModifyCapacityReservation\",\"elasticloadbalancing:ModifyIpPools\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:SetRulePriorities\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAS2VS4IRZASAUVNENQ",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "arn": "arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.load_balancer.data.http.alb_controller_policy"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "alb_sa_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::194722415730:role/AmazonEKSLoadBalancerControllerRole",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::194722415730:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/188F954CDB12DBC929471E9A4766D5F4\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-09-03T23:14:26Z",
            "description": "",
            "force_detach_policies": false,
            "id": "AmazonEKSLoadBalancerControllerRole",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy"
            ],
            "max_session_duration": 3600,
            "name": "AmazonEKSLoadBalancerControllerRole",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAS2VS4IRZDBSBXTGJW"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "account_id": "194722415730",
            "name": "AmazonEKSLoadBalancerControllerRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "alb_controller_attach",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "AmazonEKSLoadBalancerControllerRole/arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy",
            "policy_arn": "arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy",
            "role": "AmazonEKSLoadBalancerControllerRole"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "account_id": "194722415730",
            "policy_arn": "arn:aws:iam::194722415730:policy/AWSLoadBalancerControllerIAMPolicy",
            "role": "AmazonEKSLoadBalancerControllerRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.load_balancer.aws_iam_policy.alb_controller",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role",
            "module.load_balancer.data.http.alb_controller_policy"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "managed",
      "type": "helm_release",
      "name": "aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.13.4",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"eks-cluster\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller\"}}",
                "version": "1.13.4"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "",
                "value": "eks-cluster"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-load-balancer-controller"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.13.4",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "alb_controller_sa",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "",
            "id": "kube-system/aws-load-balancer-controller",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "eks.amazonaws.com/role-arn": "arn:aws:iam::194722415730:role/AmazonEKSLoadBalancerControllerRole"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "resource_version": "14613",
                "uid": "a2dabef3-e91c-45e6-b7b8-26e3586884aa"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_iam_openid_connect_provider.oidc_provider",
            "module.load_balancer.aws_iam_role.alb_sa_role",
            "module.load_balancer.data.aws_iam_policy_document.alb_assume_role"
          ]
        }
      ]
    },
    {
      "module": "module.monitoring",
      "mode": "managed",
      "type": "helm_release",
      "name": "newrelic_bundle",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "nri-bundle",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "newrelic-bundle",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "nri-bundle",
                "name": "newrelic-bundle",
                "namespace": "newrelic",
                "revision": 1,
                "values": "{\"global\":{\"cluster\":\"eks-cluster\",\"licenseKey\":\"ef048a8245e2f11f860ac680c1aaabe2FFFFNRAL\",\"lowDataMode\":true},\"k8s-agents-operator\":{\"enabled\":true},\"kube-state-metrics\":{\"enabled\":true,\"image\":{\"tag\":\"v2.13.0\"}},\"kubeEvents\":{\"enabled\":true},\"logging\":{\"enabled\":true},\"newrelic-logging\":{\"lowDataMode\":true},\"newrelic-prometheus-agent\":{\"config\":{\"kubernetes\":{\"integrations_filter\":{\"enabled\":false}}},\"enabled\":true,\"lowDataMode\":true}}",
                "version": "6.0.11"
              }
            ],
            "name": "newrelic-bundle",
            "namespace": "newrelic",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm-charts.newrelic.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "global.cluster",
                "type": "",
                "value": "eks-cluster"
              },
              {
                "name": "global.licenseKey",
                "type": "",
                "value": "ef048a8245e2f11f860ac680c1aaabe2FFFFNRAL"
              },
              {
                "name": "global.lowDataMode",
                "type": "",
                "value": "true"
              },
              {
                "name": "k8s-agents-operator.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "kube-state-metrics.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "kube-state-metrics.image.tag",
                "type": "",
                "value": "v2.13.0"
              },
              {
                "name": "kubeEvents.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "logging.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "newrelic-logging.lowDataMode",
                "type": "",
                "value": "true"
              },
              {
                "name": "newrelic-prometheus-agent.config.kubernetes.integrations_filter.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "newrelic-prometheus-agent.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "newrelic-prometheus-agent.lowDataMode",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "6.0.11",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.monitoring",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "custom_yaml",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "newrelic.com/v1alpha2",
                "kind": "Instrumentation",
                "metadata": {
                  "name": "newrelic-instrumentation",
                  "namespace": "newrelic"
                },
                "spec": {
                  "agent": {
                    "env": null,
                    "image": "newrelic/newrelic-node-init:latest",
                    "language": "nodejs"
                  },
                  "namespaceLabelSelector": {
                    "matchExpressions": [
                      {
                        "key": "kubernetes.io/metadata.name",
                        "operator": "In",
                        "values": [
                          "default"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "agent": [
                        "object",
                        {
                          "env": "dynamic",
                          "image": "string",
                          "language": "string"
                        }
                      ],
                      "namespaceLabelSelector": [
                        "object",
                        {
                          "matchExpressions": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "newrelic.com/v1alpha2",
                "kind": "Instrumentation",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "app.kubernetes.io/managed-by": "k8s-agents-operator"
                  },
                  "managedFields": null,
                  "name": "newrelic-instrumentation",
                  "namespace": "newrelic",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "agent": {
                    "env": null,
                    "image": "newrelic/newrelic-node-init:latest",
                    "language": "nodejs",
                    "resourceRequirements": {
                      "claims": null,
                      "limits": null,
                      "requests": null
                    },
                    "volumeLimitSize": null
                  },
                  "exporter": {
                    "endpoint": null
                  },
                  "licenseKeySecret": "newrelic-key-secret",
                  "namespaceLabelSelector": {
                    "matchExpressions": [
                      {
                        "key": "kubernetes.io/metadata.name",
                        "operator": "In",
                        "values": [
                          "default"
                        ]
                      }
                    ],
                    "matchLabels": null
                  },
                  "podLabelSelector": {
                    "matchExpressions": null,
                    "matchLabels": null
                  },
                  "propagators": null,
                  "resource": {
                    "addK8sUIDAttributes": null,
                    "resourceAttributes": null
                  },
                  "sampler": {
                    "argument": null,
                    "type": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "agent": [
                        "object",
                        {
                          "env": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "value": "string",
                                "valueFrom": [
                                  "object",
                                  {
                                    "configMapKeyRef": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "fieldRef": [
                                      "object",
                                      {
                                        "apiVersion": "string",
                                        "fieldPath": "string"
                                      }
                                    ],
                                    "resourceFieldRef": [
                                      "object",
                                      {
                                        "containerName": "string",
                                        "divisor": "string",
                                        "resource": "string"
                                      }
                                    ],
                                    "secretKeyRef": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ],
                          "image": "string",
                          "language": "string",
                          "resourceRequirements": [
                            "object",
                            {
                              "claims": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "request": "string"
                                  }
                                ]
                              ],
                              "limits": [
                                "map",
                                "string"
                              ],
                              "requests": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "volumeLimitSize": "string"
                        }
                      ],
                      "exporter": [
                        "object",
                        {
                          "endpoint": "string"
                        }
                      ],
                      "licenseKeySecret": "string",
                      "namespaceLabelSelector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "podLabelSelector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "propagators": [
                        "list",
                        "string"
                      ],
                      "resource": [
                        "object",
                        {
                          "addK8sUIDAttributes": "bool",
                          "resourceAttributes": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "sampler": [
                        "object",
                        {
                          "argument": "string",
                          "type": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.monitoring.helm_release.newrelic_bundle"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
